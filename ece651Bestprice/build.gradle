buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        jcenter()    // Bintray's repository - a fast Maven Central mirror & more #
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.+' //#
    }
    appengine {
        deploy {
            version = 'v1'
            project = "bestprice"
        }
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks

// 设置war包的名字，由baseName+version组成
war {
    baseName = 'WK-SERVER'
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
    }
    mavenCentral()
    jcenter()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    compile 'mysql:mysql-connector-java'

    //配置mybatis 数据源
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0")
    testCompile('org.mybatis.spring.boot:mybatis-spring-boot-starter-test:1.3.0')

    //使用 Controller 的时候需要引入 web 包
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('net.sf.json-lib:json-lib:2.4:jdk15')
    // 添加provide tomcat，因为spring boot集成了tomcat，为了确保不受servlet干扰
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    //added by dan wang
    compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'jstl:jstl:1.2'

// Add your dependencies here.
//  compile 'com.google.cloud:google-cloud:+'   // Latest Cloud API's http://googlecloudplatform.github.io/google-cloud-java

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.33'
    testCompile 'org.mockito:mockito-all:1.10.19'

    testCompile 'com.google.appengine:appengine-testing:+'
    testCompile 'com.google.appengine:appengine-api-stubs:+'
    testCompile 'com.google.appengine:appengine-tools-sdk:+'
}

//added by dan

// Always run unit tests
appengineDeploy.dependsOn test
appengineStage.dependsOn test


test {
    useJUnit()
    testLogging.showStandardStreams = true
    beforeTest { descriptor ->
        logger.lifecycle("test: " + descriptor + "  Running")
    }

    onOutput { descriptor, event ->
        logger.lifecycle("test: " + descriptor + ": " + event.message )
    }
    afterTest { descriptor, result ->
        logger.lifecycle("test: " + descriptor + ": " + result )
    }
}

group   = "com.example.appenginej8"        // Generated output GroupId
version = "1.0-SNAPSHOT"       // Version in generated output

sourceCompatibility = 1.8     // App Engine Flexible uses Java 8
targetCompatibility = 1.8     // App Engine Flexible uses Java 8